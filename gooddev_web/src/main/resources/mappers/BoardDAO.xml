<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.good.gooddev_web.board.dao.BoardDAO">
	<sql id="search">
		<where>
			deleteyn = 'N'
			<if test="keyword != null and keyword.length() > 0">
				<trim prefix="and">
				(
					title LIKE '%' || #{keyword} || '%'
					OR
					content LIKE '%' || #{keyword} || '%'
				)
				</trim>
			</if>
			<if test="mid != null and mid.length >0">
				<trim prefix="and"> mid = #{mid} </trim>
			</if>
			<if test="category_no != null and category_no.length >0">
				<trim prefix="and"> category_no = #{category_no} </trim>
			</if>
		</where>
	</sql>

	<select id="getTotalCategory" resultType="io.good.gooddev_web.board.vo.BoardCategoryVO">
		SELECT
			*
		FROM GOOD_boardcategory
		order by category_no
	</select>

	<select id="getList" resultType="io.good.gooddev_web.board.vo.BoardVO">
		SELECT *
		FROM (
			SELECT good_board.*, ROW_NUMBER() OVER (ORDER BY bno DESC) AS rnum
			FROM good_board
			<include refid="search"/>
		)
		<where>
			<![CDATA[
			rnum > #{skip}
			AND rnum <= #{skip} + #{size}
			]]>
		</where>
		ORDER BY bno DESC
	</select>

	<select id="getTotalCount" resultType="int">
		select count(*) from
		good_board
		<include refid="search"/>
	</select>

	<select id="getRead" resultType="io.good.gooddev_web.board.vo.BoardVO">
		SELECT * FROM good_board where bno = #{bno, jdbcType=NUMERIC}
	</select>
	

	<update id="viewCount" parameterType="int">
		update good_board set
		view_cnt = view_cnt+1 where bno = #{bno, jdbcType=NUMERIC}
	</update>

	<insert id="insert" keyProperty="bno">
		<selectKey order="BEFORE" keyProperty="bno" resultType="java.lang.Integer">
			SELECT bno_sequence.NEXTVAL FROM dual
		</selectKey>
		insert into good_board (bno, title, content, mid,
		board_password, category_no) values (#{bno}, #{title},
		#{content}, #{mid, jdbcType=VARCHAR}, #{board_password,
		jdbcType=VARCHAR}, #{category_no})
	</insert>

	<!-- 좋아요 여부 확인 -->
	<select id="existsLike" resultType="boolean">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		FROM good_likeboard
		WHERE mid = #{mid, jdbcType=VARCHAR}
		AND bno = #{bno, jdbcType=NUMERIC}
		AND deleteyn = 'N'
		and like_board = 1
	</select>

	<!-- 싫어요 여부 확인 -->
	<select id="existsHate" resultType="boolean">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		FROM good_likeboard
		WHERE mid = #{mid, jdbcType=VARCHAR}
		AND bno = #{bno, jdbcType=NUMERIC}
		AND deleteyn = 'N'
		and like_board = 0
	</select>

	<!-- 좋아요 추가 -->
	<insert id="insertLike">
		INSERT INTO good_likeboard (lbno, mid, bno, like_board, LIKE_BOARD_DATE,
		DELETEYN)
		VALUES (lbno_sequence.NEXTVAL, #{mid, jdbcType=VARCHAR}, #{bno,
		jdbcType=NUMERIC}, #{likeValue}, SYSDATE, 'N')
	</insert>
	
	<!-- 싫어요 추가 -->
	<insert id="insertHate">
		insert into good_likeboard (lbno, mid, bno, like_board, like_board_date, deleteyn) values (lbno_sequence.NEXTVAL, #{mid, jdbcType=VARCHAR}, #{bno, jdbcType=NUMERIC}, #{hateValue}, SYSDATE, 'N')
	</insert>

	<!-- DELETEYN 업데이트 (좋아요, 싫어요 취소) -->
	<update id="updateDeleteYN">
		UPDATE good_likeboard
		SET deleteyn = #{deleteYN}, LIKE_BOARD_DATE = SYSDATE
		WHERE mid = #{mid, jdbcType=VARCHAR}
		AND bno = #{bno, jdbcType=NUMERIC}
	</update>

	<!-- 좋아요 수 업데이트 -->
	<update id="updateLikeCount">
		UPDATE good_board
		SET like_cnt = like_cnt + #{likeValue}
		WHERE bno = #{bno, jdbcType=NUMERIC}
	</update>
	
	<!-- 싫어요 수 업데이트 -->
	<update id="updateHateCount">
		update good_board set hate_cnt = hate_cnt + #{hateValue} where bno = #{bno, jdbcType=NUMERIC}
	</update>

	<!-- 좋아요 개수 조회 -->
	<select id="getLikeCount" resultType="int">
		SELECT like_cnt
		FROM good_board
		WHERE bno = #{bno, jdbcType=NUMERIC}
	</select>

	<!-- 싫어요 개수 조회 -->
	<select id="getHateCount" resultType="int">
		SELECT hate_cnt
		FROM good_board
		WHERE bno = #{bno, jdbcType=NUMERIC}
	</select>

	<!-- TOP 10 기능 -->
	<select id="topTenList" resultType="io.good.gooddev_web.board.vo.BoardVO">
		SELECT *
		FROM (
		SELECT *
		FROM good_board
		WHERE like_cnt > 0
		and deleteyn = 'N'
		ORDER BY like_cnt DESC
		)
		WHERE ROWNUM &lt; 10
	</select>
	
	<update id="update">
		update good_board set title = #{title}, content = #{content} where bno = #{bno}
	</update>
	
	<update id="delete">
		update good_board set deleteyn = 'Y' where bno = #{bno} and board_password = #{board_password}
	</update>
	
</mapper>
